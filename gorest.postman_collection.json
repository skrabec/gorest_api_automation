{
	"info": {
		"_postman_id": "16e328e0-8690-4fb9-b0f4-d40ec69e3ee1",
		"name": "gorest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "498936"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"The response has all properties\", () => {\r",
							"    //parse the response JSON and test three properties\r",
							"    const responseJson = pm.response.json();\r",
							"    pm.expect(responseJson.status).to.eql('active');\r",
							"    pm.expect(responseJson.name).to.be.a('string');\r",
							"    pm.expect(responseJson.id).to.be.a(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"active\"\r\n}"
				},
				"url": {
					"raw": "{{url}}{{create_user}}",
					"host": [
						"{{url}}{{create_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user with no headers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Tests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].field).to.eql('email');\r",
							"    pm.expect(jsonData[0].message).to.eql(\"can't be blank\")\r",
							"\r",
							"    pm.expect(jsonData[1].field).to.eql('name');\r",
							"    pm.expect(jsonData[1].message).to.eql(\"can't be blank\")\r",
							"\r",
							"    pm.expect(jsonData[2].field).to.eql('gender');\r",
							"    pm.expect(jsonData[2].message).to.eql(\"can't be blank, can be male of female\")\r",
							"\r",
							"    pm.expect(jsonData[3].field).to.eql('status');\r",
							"    pm.expect(jsonData[3].message).to.eql(\"can't be blank\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"active\"\r\n}"
				},
				"url": {
					"raw": "{{url}}{{create_user}}",
					"host": [
						"{{url}}{{create_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user with invalid email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Tests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].field).to.eql('email');\r",
							"    pm.expect(jsonData[0].message).to.eql('is invalid')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"test.com\",\r\n    \"status\": \"active\"\r\n}"
				},
				"url": {
					"raw": "{{url}}{{create_user}}",
					"host": [
						"{{url}}{{create_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user with existing email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Tests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].field).to.eql('email');\r",
							"    pm.expect(jsonData[0].message).to.eql('has already been taken')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"tenali.ramakrishna@15ce.com\",\r\n    \"status\": \"active\"\r\n}"
				},
				"url": {
					"raw": "{{url}}{{create_user}}",
					"host": [
						"{{url}}{{create_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user with invalid gender type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Tests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].field).to.eql('gender');\r",
							"    pm.expect(jsonData[0].message).to.eql(\"can't be blank, can be male of female\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"gender\": 1,\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"active\"\r\n}"
				},
				"url": {
					"raw": "{{url}}{{create_user}}",
					"host": [
						"{{url}}{{create_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user with empty body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 422\", function () {\r",
							"    pm.response.to.have.status(422);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"pm.test(\"Tests\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].field).to.eql('email');\r",
							"    pm.expect(jsonData[0].message).to.eql(\"can't be blank\")\r",
							"\r",
							"    pm.expect(jsonData[1].field).to.eql('name');\r",
							"    pm.expect(jsonData[1].message).to.eql(\"can't be blank\")\r",
							"\r",
							"    pm.expect(jsonData[2].field).to.eql('gender');\r",
							"    pm.expect(jsonData[2].message).to.eql(\"can't be blank, can be male of female\")\r",
							"\r",
							"    pm.expect(jsonData[3].field).to.eql('status');\r",
							"    pm.expect(jsonData[3].message).to.eql(\"can't be blank\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}{{create_user}}",
					"host": [
						"{{url}}{{create_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user no auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Message\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"Authentication failed\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}{{create_user}}",
					"host": [
						"{{url}}{{create_user}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user with DELETE method",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"{{$randomFullName}}\",\r\n    \"gender\": \"male\",\r\n    \"email\": \"{{$randomEmail}}\",\r\n    \"status\": \"active\"\r\n}"
				},
				"url": {
					"raw": "{{url}}{{create_user}}",
					"host": [
						"{{url}}{{create_user}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "bf3540b4cea280ff68fec4da41a3bd280b9d59b4df9ad9c27dddeab98f59a4da",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}